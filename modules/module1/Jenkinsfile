pipeline {
  agent none

  environment {
    CLI_BRANCH="master"
    token="${NLW_TOKEN}"
    zone_id="${NLW_ZONE}"
    api_url="${NLW_API_URL}"
  }

  stages {
    stage ('Prep workspace') {
      agent any
      steps {
        cleanWs()
        script {
          try { sh "docker rmi \$(docker images -a --filter=\"label=${env.CLI_BRANCH}\" --format=\"{{.ID}}\") --force" }
          catch(error) {}
        }
      }
    }
    stage('Attach Worker') {
      agent {
        dockerfile {
          filename 'JenkinsBuildAgent.Dockerfile'
          dir 'modules/module1'
          additionalBuildArgs "--rm --label \"${env.CLI_BRANCH}\""
        }
      }
      stages {
        stage('Prepare docker') {
          steps {
            sh 'neoload --version'
          }
        }
        stage('Prepare Neoload test') {
          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
              sh """neoload \
                     login --url ${env.api_url} ${env.token} \
                     test-settings --zone ${env.zone_id} --lgs 1 --scenario sanityScenario createorpatch "example-Jenkins-module1" \
                     project --path tests/neoload_projects/example_1/ upload
                """
            }
          }
        }
        stage('Run Test') {
          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
              sh """neoload run \
                  --as-code default.yaml,slas/uat.yaml
                 """
            }
          }
        }
        stage('Generate Test Report') {
          steps {
            withEnv(["HOME=${env.WORKSPACE}"]) {
                sh "neoload test-results junitsla"
            }
          }
          post {
              always {
                  junit 'junit-sla.xml'
              }
          }
        }
      }
    }
  }
}
